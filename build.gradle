buildscript {
    ext.versions = [
            'enjinCommons'   : '0.3.0-SNAPSHOT',
            'gson'           : '2.8.5',
            'pusher'         : '1.8.0',
            'okhttp'         : '3.12.1',
            'retrofit'       : '2.5.0',
            'supportOptional': '1.2',
            'lombok'         : '1.18.6',
            'junit'          : '4.12',
            'mockWebServer'  : '4.2.0',
            'truth'          : '1.0',
            'awaitility'     : '4.0.1'
    ]

    ext.deps = [
            'enjinCommons'            : "com.enjin:java_commons:${versions.enjinCommons}",
            'gson'                    : "com.google.code.gson:gson:${versions.gson}",
            'pusher'                  : "com.pusher:pusher-java-client:${versions.pusher}",
            'okhttp'                  : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            'okhttpLoggingInterceptor': "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
            'okhttpUrlConnection'     : "com.squareup.okhttp3:okhttp-urlconnection:${versions.okhttp}",
            'retrofit'                : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            'retrofitGson'            : "com.squareup.retrofit2:converter-gson:${versions.retrofit}",
            'supportOptional'         : "com.github.dmstocking:support-optional:${versions.supportOptional}",
            'junit'                   : "junit:junit:${versions.junit}",
            'mockWebServer'           : "com.squareup.okhttp3:mockwebserver:${versions.mockWebServer}",
            'truth'                   : "com.google.truth:truth:${versions.truth}",
            'awaitility'              : "org.awaitility:awaitility:${versions.awaitility}"
    ]

    ext.local = new Properties()
    File file = project.rootProject.file('local.properties')
    if (file.exists()) local.load(file.newDataInputStream())

    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
    id 'io.freefair.lombok' version '3.2.1'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'com.bmuschko.nexus' version '2.3.1'
    id 'io.codearte.nexus-staging' version '0.20.0'
    id 'org.ajoberstar.git-publish' version '2.1.1'
    id 'net.ltgt.errorprone' version '0.8.1'
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

group = 'com.enjin'
version = '1.0.0-SNAPSHOT'

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/groups/public/'
        }

    }
}

dependencies {
    api deps.okhttpLoggingInterceptor

    implementation deps.enjinCommons
    implementation deps.gson
    implementation deps.pusher
    implementation deps.okhttp
    implementation deps.okhttpUrlConnection
    implementation deps.retrofit
    implementation deps.retrofitGson
    implementation deps.supportOptional

    testImplementation deps.junit
    testImplementation deps.truth
    testImplementation deps.mockWebServer
    testImplementation deps.awaitility

    errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
    errorprone 'com.google.errorprone:error_prone_core:2.3.3'
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        enabled = JavaVersion.current() < JavaVersion.VERSION_12
        disable('UnusedVariable')
    }
}

javadoc {
    dependsOn delombok
    source = delombok.target
    // exclude any implementation packages
    exclude '**/impl/**'
    // exclude any implementation classes
    exclude '**/*Impl.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

artifacts {
    archives javadocJar
    archives sourcesJar
    archives shadowJar
}

modifyPom {
    project {
        name 'Enjin Coin Java SDK'
        description 'Java SDK for interacting with the Enjin Coin Trusted Platform'
        url 'https://github.com/enjin/Enjin-Coin-Java-SDK'
        inceptionYear '2017'

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'Favorlock'
                name 'Evan Lindsay'
                email 'evan@enjin.io'
            }
        }
    }
}

extraArchive {
    sources = false
    javadoc = false
    tests = false
}

nexus {
    sign = false
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
}

nexusStaging {
    username = local.getProperty('nexusUsername')
    password = local.getProperty('nexusPassword')
}

gitPublish {
    repoUri = 'git@github.com:enjin/Enjin-Coin-Java-SDK.git'
    branch = 'gh-pages'
    contents {
        from(javadoc) {
            into '/'
        }
    }
    commitMessage = "Publishing documentation for version ${version}."
}

wrapper {
    gradleVersion = '5.4.1'
    distributionType = Wrapper.DistributionType.ALL
}